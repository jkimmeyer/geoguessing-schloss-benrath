import Head from 'next/head'
import '../../config/i18n';
import { useTranslation } from 'react-i18next';
import { ButtonType, UserContextType } from '../../types';
import Page from '../../layouts/Page';
import SbChapter from '../../components/SbChapter/SbChapter';
import SbButton from '../../components/SbButton/SbButton';
import SbTitle from '../../components/SbTitle/SbTitle';
import { SbNameForm } from '../../components/SbNameForm/SbNameForm';
import { useRouter } from 'next/router';
import { useContext, useEffect } from 'react';
import { UserContext } from '../../context/userContext';
import SbFooter from '../../components/SbFooter/SbFooter';
import landingPageStyles from '../../assets/stylesheets/landing-page.module.css'
export default function Home() {
  const { t } = useTranslation();

  // eslint-disable-next-line react-hooks/rules-of-hooks
  const router = useRouter()

  const { currentUser, hasPlayerName } = useContext(UserContext) as UserContextType

  const postData = async () => {
    try {
      const body = { playerName: currentUser?.playerName };
      const response = await fetch(`/api/rankings`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      return response.json()
    } catch (error) {
      console.error(error);
    }
  }

  const handleClick = () => {
    postData().then(() => {
      if (hasPlayerName()) {
        router.push("/tour")
      } else {
        console.log("Interner Fehler.")
      }
    })
  }

  // eslint-disable-next-line react-hooks/rules-of-hooks
  useEffect(() => {
    if (window.tour) {
      router.reload()
    }
  })

  return (
    <div className={landingPageStyles['page-wrapper']}>
      <Head>
        <title>Geoguessing Schloss Benrath</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Page
        title={t('castleOfBenrath')}
        subtitle={
          <SbTitle />
        }
      >
        <SbChapter title={t('register.chooseName')} text={t('register.chooseNameHint')}>
          <SbNameForm />
        </SbChapter>

        <SbButton
          buttonType={ButtonType.Primary}
          onClick={() => handleClick()}
          disabled={!hasPlayerName()}
        >
          {t('continue')}
        </SbButton>
      </Page>
      <SbFooter></SbFooter>
    </div>
  )
}
